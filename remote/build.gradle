apply plugin: 'kotlin'

targetCompatibility = 1.8
sourceCompatibility = 1.8

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {

    //Arrow
    implementation "io.arrow-kt:arrow-typeclasses:$arrowVersion"
    implementation "io.arrow-kt:arrow-core:$arrowVersion"
    implementation "io.arrow-kt:arrow-syntax:$arrowVersion"
    implementation "io.arrow-kt:arrow-typeclasses:$arrowVersion"
    implementation "io.arrow-kt:arrow-data:$arrowVersion"
    implementation "io.arrow-kt:arrow-instances-core:$arrowVersion"
    implementation "io.arrow-kt:arrow-instances-data:$arrowVersion"
    implementation "io.arrow-kt:arrow-free:$arrowVersion"
    implementation "io.arrow-kt:arrow-instances-free:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects-instances:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects-kotlinx-coroutines:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects-kotlinx-coroutines-instances:$arrowVersion"
    implementation "io.arrow-kt:arrow-optics:$arrowVersion"
    implementation "io.arrow-kt:arrow-generic:$arrowVersion"
    implementation "io.arrow-kt:arrow-integration-retrofit-adapter:$arrowVersion"

    // Gson
    implementation "com.google.code.gson:gson:$gsonVersion"

    // JavaX Inject
    implementation "javax.inject:javax.inject:$javaxInjectVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpLoggingInterceptorVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    implementation project(path: ':data')
    implementation project(path: ':domain')

    // Testing
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnit5Version"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
}